// -------Hamburger-hmiables--------
$Hamburger: (
  "bar-width": 30px,
  "bar-height": 3px,
  "bar-gap": 6px,
  "foreground": white,
  "background": transparent,
  "hamburger-margin": 5px,
  "animation-timing": 200ms ease-in-out,
  "hamburger-height": calc(hm(bar-height) * 3 + hm(bar-gap) * 2),
  "x-width": calc(hm(hamburger-height) * 1.41421356237),
);
@function hm($key) {
  @return map-get($Hamburger, $key);
}

.ham {
  /* Styling */
  display: flex;
  flex-direction: column;
  gap: hm(bar-gap);
  width: max-content;

  position: relative;
  z-index: 3;
  cursor: pointer;
  @include desktop {
    display: none;
  }
}
.ham::before,
.ham::after,
.ham input {
  content: "";
  width: hm(bar-width);
  height: hm(bar-height);
  background-color: hm(foreground);
  transition: opacity hm(animation-timing), width hm(animation-timing),
    rotate hm(animation-timing), background-color hm(animation-timing),
    translate hm(animation-timing);
  transform-origin: left center;
}
.ham input {
  appearance: none;
  outline: none;
  pointer-events: none;
}
.ham:has(input:checked)::before {
  rotate: 45deg;
  width: hm(x-width);
  translate: 0 calc(hm(bar-height) / -2);
}
.ham:has(input:checked)::after {
  rotate: -45deg;
  width: hm(x-width);
  translate: 0 calc(hm(bar-height) / 2);
}

.ham input:checked {
  opacity: 0;
  width: 0;
}

.ham:has(input:checked) + nav {
  z-index: 1;
  display: block;
}
